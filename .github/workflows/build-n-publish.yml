---
name: Build and Deploy

on: 
  workflow_dispatch:
    inputs: {}
  push:
    branches:
      - main

jobs:
  setup:
    name: Deploy Setup 
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend-changed }}
      data-changed: ${{ steps.changes.outputs.data-changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0

      - name: Detect Changes
        id: changes
        run: |
          FRONTEND_DIFF=$(git diff --name-only origin/main -- frontend/* | wc -l | xargs)
          DATA_DIFF=$(git diff --name-only origin/main -- data/* | wc -l | xargs)

          if [[ "$FRONTEND_DIFF" == "1" ]]; then
            echo "frontend-changed=true" >> $GITHUB_OUTPUT
          fi

          if [[ "$DATA_DIFF" == "1" ]]; then
            echo "data-changed=true" >> $GITHUB_OUTPUT
          fi


  build-frontend:
    name: Build Frontend
    if: ${{ needs.setup.outputs.frontend-changed }}
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0

      - name: Build Site
        run: |
          cd frontend
          npm ci
          echo "{}" > src/posts.json
          npm run build

      - name: Upload Site Artifact
        uses: actions/upload-pages-artifact@v1.0.8
        with: 
          path: frontend/build


  deploy-frontend:
    name: Deploy Frontend
    if: ${{ needs.setup.outputs.frontend-changed }}
    needs: [setup]
    runs-on: ubuntu-latest
    needs: build-frontend
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2.0.0


  build-data:
    name: Build Data
    if: ${{ needs.setup.outputs.data-changed }}
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0

      - name: Build data
        working-directory: data
        run: |
          npm run build:posts
          npm run build:rss

      - name: Publish posts to R2
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_KEY }}
          accountId: ${{ secrets.CF_ACCOUNT }}
          command: r2 object put flinnlab-blog/posts.json --file ./data/posts.json

      - name: Publish RSS Feed to R2
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_KEY }}
          accountId: ${{ secrets.CF_ACCOUNT }}
          command: r2 object put flinnlab-blog/rss.xml --file ./data/rss.xml
