---
name: Build and Deploy

on: 
  workflow_dispatch:
    inputs:
      deploy-backend:
        description: "Deploy Backend"
        default: false
        type: boolean
      update-data:
        description: "Update Data"
        default: false
        type: boolean
  push:
    branches:
      - main

jobs:
  setup:
    name: Deploy Setup 
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend-changed }}
      data-changed: ${{ steps.changes.outputs.data-changed }}
      backend-changed: ${{ steps.changes.outputs.backend-changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0
        with:
          fetch-depth: 0

      - name: Detect Changes
        id: changes
        run: |
          echo "## Deploy" >> $GITHUB_STEP_SUMMARY
          echo "| project | deploying |" >> $GITHUB_STEP_SUMMARY
          echo "| ------- | --------- |" >> $GITHUB_STEP_SUMMARY

          monorepo_projects=( frontend backend data )
          for i in "${monorepo_projects[@]}"
          do
              DIFF=$(git diff --name-only HEAD~1 -- $i/* | wc -l | xargs)

              if [[ "$DIFF" != "0" ]]; then
                echo "$i-changed=true" >> $GITHUB_OUTPUT
                echo "| $i | :heavy_check_mark: |" >> $GITHUB_STEP_SUMMARY
              else 
                echo "$i-changed=false" >> $GITHUB_OUTPUT
                echo "| $i | :x: |" >> $GITHUB_STEP_SUMMARY
              fi
          done


  build-frontend:
    name: Build Frontend
    if: ${{ needs.setup.outputs.frontend-changed == 'true' || inputs.deploy-frontend }}
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0

      - name: Build Site
        run: |
          cd frontend
          npm ci
          echo "{}" > src/posts.json
          npm run build


  build-n-deploy-data:
    name: Build Data
    if: ${{ needs.setup.outputs.data-changed == 'true' || inputs.update-data }}
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0

      - name: Build data
        working-directory: data
        run: |
          npm run build:posts
          npm run build:rss

      - name: Publish posts to R2
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_KEY }}
          accountId: ${{ secrets.CF_ACCOUNT }}
          command: r2 object put flinnlab-blog/posts.json --file ./data/posts.json

      - name: Publish RSS Feed to R2
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_KEY }}
          accountId: ${{ secrets.CF_ACCOUNT }}
          command: r2 object put flinnlab-blog/rss.xml --file ./data/rss.xml


  deploy-backend:
    name: Deploy Backend
    if: ${{ needs.setup.outputs.backend-changed == 'true' || inputs.deploy-backend }}
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0

      - name: Deploy Backend
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_KEY }}
          accountId: ${{ secrets.CF_ACCOUNT }}
          workingDirectory: backend
          command: deploy --env production
