---
name: CI

on: 
  workflow_dispatch:
    inputs: {}
  pull_request:
    branches:
      - main

jobs:
  setup:
    name: Deploy Setup 
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend-changed }}
      data-changed: ${{ steps.changes.outputs.data-changed }}
      backend-changed: ${{ steps.changes.outputs.backend-changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0

      - name: Detect Changes
        id: changes
        run: |
          FRONTEND_DIFF=$(git diff --name-only HEAD~1 -- frontend/* | wc -l | xargs)
          DATA_DIFF=$(git diff --name-only HEAD~1 -- data/* | wc -l | xargs)
          BACKEND_DIFF=$(git diff --name-only HEAD~1 -- backend/* | wc -l | xargs)

          if [[ "$FRONTEND_DIFF" == "1" ]]; then
            echo "frontend-changed=true" >> $GITHUB_OUTPUT
          fi

          if [[ "$DATA_DIFF" == "1" ]]; then
            echo "data-changed=true" >> $GITHUB_OUTPUT
          fi

          if [[ "$BACKEND_DIFF" == "1" ]]; then
            echo "backend-changed=true" >> $GITHUB_OUTPUT
          fi


  build-frontend:
    name: Build Frontend
    if: ${{ needs.setup.outputs.frontend-changed == 'true' }}
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0

      - name: Build Site
        run: |
          cd frontend
          npm ci
          echo "{}" > src/posts.json
          npm run build


  build-data:
    name: Build Data
    if: ${{ needs.setup.outputs.data-changed == 'true' }}
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0

      - name: Build data
        working-directory: data
        run: |
          npm run build:posts
          npm run build:rss


  test-backend:
    name: Deploy & Test Backend
    if: ${{ needs.setup.outputs.backend-changed == 'true' }}
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0

      - name: Deploy backend
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_KEY }}
          accountId: ${{ secrets.CF_ACCOUNT }}
          workingDirectory: backend
          command: deploy --env staging

      - name: Run Integration Tests
        uses: grafana/k6-action@v0.3.0
        with:
          filename: backend/test/script.js
